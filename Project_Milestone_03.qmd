---
title: "Project_Milestone_03"
author: "Ngan Nguyen, Nicole Fernandez, Shirley Sui"
format: html
editor: visual
---

## Project Milestone #3:

## Clean each dataset and include descriptive statistics for relevant data elements

-   The sim_flu_CA.csv file and sim_flu_LACounty.csv file together represent simulated morbidity for the entire state of California.

-   While it's certainly possible for data from different sources to adhere to a format standard, one of the challenges of working with secondary data is that it often does not work out that way.

-   Therefore to prepare each dataset (milestone #3) so that they can be combined into one, whole state, dataset you will need to do the following:

```{r load libraries, include=FALSE, echo=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)

# Load tidyverse for all data cleaning packages
library(tidyverse)
library(lubridate)
```

```{r load dataset}
#Load data from project milestone #2 in Milestone_2_Clean_Data
df_vax <- read_csv('./Milestone_2_Clean_Data/ca_vax_rates_quarter_milestone_2.csv')
df_flu_CA <- read_csv('./Milestone_2_Clean_Data/sim_flu_CA_milestone_2.csv')
df_flu_LA <- read_csv('./Milestone_2_Clean_Data/sim_flu_LACounty_milestone_2.csv')
```

### [Flu morbidity datasets (from CA and LA County)]{.underline}

-   Recode column names, values, or formats that are in discordant (dates, etc)

    -   Reviewed all columns in the datasets resulting from last milestone's initial data cleaning

    -   Potentially discordant columns identified via review of codebook:

    -   county (does not exist in LA data)

        -   needs to be added as a column in LA dataframe

    -   age_category

        -   both use the same categories
        -   needs to be set as factor in both dataframes (currently character)

    -   sex

        -   both use the same categories
        -   needs to be set as factor in both dataframes (currently character)

    -   race_eth

        -   in flu_CA - plain text and numbered, needs to be set as factor and recoded
        -   in flu_LA - plain text, needs to be set as factor

    -   dt_report

        -   correct format, but all NA values in flu_LA - can calculate using codebook definition
        -   calculate values in flu_LA - dt_report = last day of epi_week for dt_dx (dt_dx might need to be converted to date format before doing this calculation)

    -   dt_dx

        -   codebook recommends not to use this for flu_CA - can instead use dt_report
        -   remove from both dataframes after dt_report is calculated for flu_LA

```{r cleaning flu_CA}
# age_category & sex - format as factor

# recode race_eth using codebook, format as factor

# remove dt_dx from dataframe (not recommended for use for data analysis per codebook for flu_CA)

```

```{r cleaning flu_LA}
# add county column in position 1, with value being "Los Angeles County"

# age_category & sex & race_eth - format as factor

# dt_report - calculate using definition from codebook
# 1) convert dt_dx to date format
# 2) calculate: dt_report = last day of epi_week for dt_dx
# 3) format of result should be yyyy-mm-dd to match flu_CA data

# remove dt_dx from dataframe (not recommended for use for data analysis per codebook for flu_CA)

```

-   Combine morbidity datasets into a single dataset

```{r combining flu_CA and flu_LA}

```

-   Select demographic and geographic strata (s) of interest

```{r flu - select demo/geo strata of interest}

```

-   Aggregate the data into a new dataframe to include only one row per strata of interest

```{r flu - aggregate data, new df with one row per strata of interest}

```

### [Vaccination dataset]{.underline}

-   Recode values to be consistent with morbidity datasets so they can be joined

```{r cleaning vax}

```

-   Select vaccination time frame that fits best with morbidity data and subset appropriately

```{r subset vax}

```

-   Select demographic strata(s) of interest

```{r vax - select demo/geo strata of interest}

```

-   Create a vaccination rate metric and summarize to include only one row per strata of interest

```{r vax - vax rate metric, summarize to include one row per strata of interest}

```

1)  Subset rows or columns, as needed

2)  Create new variables needed for analysis (minimum 2)

    New variables should be created based on existing columns;

    for example

    -   Calculating a rate;

    -   Combining character strings

    -   Aggregation

3)  Clean variables needed for analysis (minimum 2)

    Examples

    -   Recode invalid values

    -   Handle missing data

    -   Recode categories

4)  Data re-structured as needed (aggregated/summarized and/or pivoted)

5)  Data dictionary based on clean dataset (minimum 4 data elements), including:

    -   Variable name
    -   Data type
    -   Description

6)  One or more tables with descriptive statistics for 4 data elements

7)  Html output that is professionally prepared for presentation

    -   Only the necessary information is outputted (you should suppress, for example, entire data frame outputs)

    -   Use of headers and sub headers to create an organized document
